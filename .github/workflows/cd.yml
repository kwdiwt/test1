name: go

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    # https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
    # public repositories： x64 -> ubuntu-24.04，arm64 -> ubuntu-24.04-arm
    # private repositories：x64 -> ubuntu-24.04，arm64 -> macos-latest
    runs-on: ${{ matrix.os }}

    # strategy.matrix  > 定义需要构建的平台列表，触发并行任务
    # QEMU > 提供跨架构仿真能力，确保非本地架构的构建指令可执行 > 必需支撑矩阵中的异构平台
    # Buildx > 调用 QEMU 和 Docker 引擎，根据矩阵参数执行实际的多平台构建与推送操作 > 依赖 QEMU 实现跨架构编译

    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
    # A matrix strategy lets you use variables in a single job definition to automatically create
    # multiple job runs that are based on the combinations of the variables. For example, you can
    # use a matrix strategy to test your code in multiple versions of a language or on multiple
    # operating systems.
    strategy:
      matrix:
        include:
          - os: windows-2025
            platform: windows/x64

    steps:
      # https://github.com/docker/build-push-action?tab=readme-ov-file#git-context
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'

      - name: Build
        run: go build -v ./...

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: aper.exe
